{"ast":null,"code":"var _jsxFileName = \"/Users/Pati/Desktop/Studia/UG/Semestr4/devops/devops/myfrontend/src/MyForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyForm = props => {\n  _s();\n\n  const [flowers, setFlowers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [flower, setFlower] = useState(\"\");\n  const [getId, setGetId] = useState(0);\n  const [removeId, setRemoveId] = useState(0);\n  const [removeLog, setRemoveLog] = useState(\"\");\n  const [updateLog, setUpdateLog] = useState(\"\");\n  const [updateId, setUpdateId] = useState(0);\n  const [updateName, setUpdateName] = useState(\"\");\n\n  const handlePostSubmit = event => {\n    console.log(`Flower to save ${name}`);\n    event.preventDefault();\n    axios.post('http://127.0.0.1:4000/flower', {\n      name: name\n    }).then(response => console.log(response)).catch(error => console.log(error));\n  };\n\n  const handleGetSubmit = event => {\n    console.log(`Flower id to get ${getId}`);\n    axios.get('http://127.0.0.1:4000/flower/' + getId).then(response => {\n      console.log(response);\n      setFlower(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  const handleRemoveSubmit = event => {\n    console.log(`Flower id to remove ${removeId}`);\n    axios.delete('http://127.0.0.1:4000/flower/' + removeId).then(response => {\n      console.log(response);\n      setRemoveLog(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  const handleUpdateSubmit = event => {\n    console.log(`Flower id to update ${updateId} new name ${updateName}`);\n    axios.put('http://127.0.0.1:4000/flower/', {\n      id: updateId,\n      name: updateName\n    }).then(response => {\n      console.log(response);\n      setUpdateLog(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:4000/flowers').then(response => setFlowers(response.data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Post a flower:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: event => setName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: handlePostSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 78\n    }, this), \"Get a flower:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: getId,\n      onChange: event => setGetId(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: handleGetSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 77\n    }, this), \"Your result:   \", flower, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 43\n    }, this), \"Remove a flower:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: removeId,\n      onChange: event => setRemoveId(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: handleRemoveSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 80\n    }, this), \"Your result:   \", removeLog, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 46\n    }, this), \"Update flower name: id: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: updateId,\n      onChange: event => setUpdateId(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), \"new name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: updateName,\n      onChange: event => setUpdateName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: handleUpdateSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 80\n    }, this), \"Your result:   \", updateLog, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 40\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), \" List of \", props.noFlowers, \" flowers \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 57\n      }, this), flowers.slice(0, props.noFlowers).map(flower => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [flower.id, \" \", flower.name]\n      }, flower.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyForm, \"Aso/axvxK+6NDZ0OX5UDBZzNpW0=\");\n\n_c = MyForm;\nexport default MyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"sources":["/Users/Pati/Desktop/Studia/UG/Semestr4/devops/devops/myfrontend/src/MyForm.js"],"names":["React","useState","useEffect","axios","MyForm","props","flowers","setFlowers","name","setName","flower","setFlower","getId","setGetId","removeId","setRemoveId","removeLog","setRemoveLog","updateLog","setUpdateLog","updateId","setUpdateId","updateName","setUpdateName","handlePostSubmit","event","console","log","preventDefault","post","then","response","catch","error","handleGetSubmit","get","data","handleRemoveSubmit","delete","handleUpdateSubmit","put","id","target","value","noFlowers","slice","map"],"mappings":"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","sourcesContent":["\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst MyForm = (props) => {\n\n    const [flowers, setFlowers] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [flower, setFlower] = useState(\"\");\n    const [getId, setGetId] = useState(0);\n    const [removeId, setRemoveId] = useState(0);\n    const [removeLog, setRemoveLog] = useState(\"\");\n    const [updateLog, setUpdateLog] = useState(\"\");\n    const [updateId, setUpdateId] = useState(0);\n    const [updateName, setUpdateName] = useState(\"\");\n\n    const handlePostSubmit = (event) => {\n        console.log(`Flower to save ${name}`);\n        event.preventDefault();\n        axios.post('http://127.0.0.1:4000/flower', \n            {\n                name: name,\n            })\n            .then(response => console.log(response))\n            .catch(error => console.log(error));\n    };\n\n    const handleGetSubmit = (event) => {\n        console.log(`Flower id to get ${getId}`);\n        axios.get('http://127.0.0.1:4000/flower/' + getId)\n            .then(response => {console.log(response); setFlower(response.data);})\n            .catch(error => console.log(error));\n    };\n\n    const handleRemoveSubmit = (event) => {\n        console.log(`Flower id to remove ${removeId}`);\n        axios.delete('http://127.0.0.1:4000/flower/' + removeId)\n            .then(response => {console.log(response); setRemoveLog(response.data);})\n            .catch(error => console.log(error));\n    };\n\n    const handleUpdateSubmit = (event) => {\n        console.log(`Flower id to update ${updateId} new name ${updateName}`);\n        axios.put('http://127.0.0.1:4000/flower/', {id: updateId, name: updateName})\n            .then(response => {console.log(response); setUpdateLog(response.data);})\n            .catch(error => console.log(error));\n    };\n\n    useEffect(() => {\n        axios.get('http://127.0.0.1:4000/flowers')\n            .then(response => setFlowers(response.data))\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <>\n            \n            Post a flower:\n            <input type='text' value={name} onChange={event => setName(event.target.value)}/>\n            <input type='submit' value='Submit' onClick={handlePostSubmit}/> <br/>\n\n            Get a flower:\n            <input type='text' value={getId} onChange={event => setGetId(event.target.value)}/>\n            <input type='submit' value='Submit' onClick={handleGetSubmit}/> <br/>\n            Your result:   {flower} <br/> <br/>\n\n            Remove a flower:\n            <input type='text' value={removeId} onChange={event => setRemoveId(event.target.value)}/>\n            <input type='submit' value='Submit' onClick={handleRemoveSubmit}/> <br/>\n            Your result:   {removeLog} <br/> <br/>\n\n            Update flower name:\n            id: <input type='text' value={updateId} onChange={event => setUpdateId(event.target.value)}/>\n            new name: <input type='text' value={updateName} onChange={event => setUpdateName(event.target.value)}/>\n            <input type='submit' value='Submit' onClick={handleUpdateSubmit}/> <br/>\n            Your result:   {updateLog} <br/> <br/>\n\n            <div>\n                <br/> List of {props.noFlowers} flowers <br/> \n                {flowers\n                    .slice(0, props.noFlowers)\n                    .map(flower => (<div key={flower.id}>{flower.id} {flower.name}</div>))}\n            </div>\n        </>\n    );\n\n};\n\nexport default MyForm;"]},"metadata":{},"sourceType":"module"}